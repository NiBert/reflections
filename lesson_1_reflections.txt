1) How did viewing a diff between two versions of a file help you see the bug
that was introduced?

diff helps by highlighting the differences between the two files.
You don't have to go through the whole files.


2) How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

If anything stopped working you can easily compare to previous versions and fix
the problem.


3) What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
Docs does?

Pros: The commits you make are meaningful and represent a logical change if well
done.
Cons: You could forget to commit and don't have any version at all.


4) Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Because it depends on what the System was made for. Code often is split into
a bunch of classes etc. while a word document includes everything related in one
file.


5) How can you use the commands git log and git diff to view the history of files?

Display the history of commits with git log and use git diff together with the
commit IDs shown by git log to see what have been changed between the versions.


6) How might using version control make you more confident to make changes that
 could break something?

It's always possible to go back to a previous version if the code got messed up.
Also it's easy to reproduce where the fault is to find and how to fix it.


7) Now that you have your workspace set up, what do you want to try using Git for?

I want to use Git for all my projects which exceed one single "session".
